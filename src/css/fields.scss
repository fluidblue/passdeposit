/**
 * PassDeposit
 * 
 * Created by Max Geissler
 */

$prependWidth: 32px;
$btnWidth: 70px;
$btnDropdownWidth: $prependWidth + 2px;
$moveText: $prependWidth + 7px;

.inputPrependInner
{
	.add-on
	{
		/* Move the add-on above the input element */
		position: absolute;

		/* The focus brings the input to z-index 2, so needs to be higher */
		z-index: 3;
		
		/* Set fixed width */
		width: ($prependWidth - 10px);

		/* Remove the border, input now takes care of this except from the right one */
		border: 0;

		/* Reseparate the add-on from the input */
		border-right: 1px solid rgb(204, 204, 204);

		/* Account for the 1px gap caused by removing the border */
		margin: 1px 0 1px 1px;
		
		/* Pass pointer events to underlying input */
		pointer-events: none;
	}
	
	> input[type=text],
	> input[type=password]
	{
		/* Move the text in the input out from under the add-on */
		padding-left: $moveText;

		/* Re apply the border radius which we've made look ugly with the add-on on top.
		   The styling is applied specifically to top-left / bottom-left
		   to allow .input-append to overwrite the right border-radius side. */
		-webkit-border-top-left-radius: 4px;
		-moz-border-top-left-radius: 4px;
		border-top-left-radius: 4px;

		-webkit-border-bottom-left-radius: 4px;
		-moz-border-bottom-left-radius: 4px;
		border-bottom-left-radius: 4px;
	}
}

/* Variable width with no appended buttons */
.inputVariableWidth0
{
	/* Include padding in width & height */
	-moz-box-sizing: border-box;
	box-sizing: border-box;
	
	/* padding-left of input + correction */
	padding-right: ($moveText + 8px);
	
	/* Use all the space */
	width: 100%;
	
	/* Set input field to max width */
	input[type=text],
	input[type=password]
	{
		width: 100%;
	}
}

/* Variable width with 1 appended dropdown button */
.inputVariableWidth1
{
	@extend .inputVariableWidth0;
	
	/* padding-left of input + btnDropdown width + correction */
	padding-right: ($moveText + $btnDropdownWidth + 5px);
	
	.btn
	{
		width: $btnWidth;
	}

	.btn:last-child,
	*:last-child .btn
	{
		width: $btnDropdownWidth;
	}
}

.inputVariableWidth1NoPrepend
{
	@extend .inputVariableWidth1;
	
	/* default padding-left of input + btnDropdown width + correction */
	padding-right: (6px + $btnDropdownWidth + 5px);
}


/* Variable width with 2 appended buttons: 1 normal button and 1 dropdown button */
.inputVariableWidth2
{
	@extend .inputVariableWidth1;
	
	/* padding-left of input + btnDropdown width + button width + correction */
	padding-right: ($moveText + $btnDropdownWidth + $btnWidth + 5px);
}

/* Variable width with 3 appended buttons: 2 normal button and 1 dropdown button */
.inputVariableWidth3
{
	@extend .inputVariableWidth2;
	
	/* padding-left of input + btnDropdown width + button width + correction */
	padding-right: ($moveText + $btnDropdownWidth + 2 * $btnWidth + 3px);
}

.itemFieldTags2
{
	position: relative;
	margin-bottom: 10px;
	
	.tags
	{
		width: 100%;
		padding-left: $moveText;
		margin-bottom: 0;
	}
	
	.addOnContainer
	{
		height: 100%;
		background-color: transparent;
		
		/* Move the add-on above the input element */
		position: absolute;

		/* The focus brings the input to z-index 2, so needs to be higher */
		z-index: 3;
		
		/* Set fixed width + 2px (padding)  */
		width: ($prependWidth + 2px);
		
		/* Pass pointer events to underlying input */
		pointer-events: none;
		
		/* Account for the 1px gap caused by removing the border */
		padding: 1px 0 1px 1px;
		
		/* Include padding in width & height */
		-moz-box-sizing: border-box;
		box-sizing: border-box;
	}
	
	.addOn
	{
		display: block;
		height: 100%;
		
		background-color: #eeeeee;
		
		border-top-left-radius: 4px;
		border-bottom-left-radius: 4px;
		
		/* Reseparate the add-on from the input */
		border-right: 1px solid rgb(204, 204, 204);
		
		padding-left: 4px;
		
		i
		{
			margin-top: 5px;
			margin-left: 5px;
		}
	}
}
